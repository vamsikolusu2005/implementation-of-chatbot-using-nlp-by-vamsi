{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "to0hyqR5nSv5",
    "outputId": "b9c98c00-f5e6-47b3-ca54-011b07b2cc49"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[nltk_data] Downloading package punkt to\n",
      "[nltk_data]     C:\\Users\\mahap\\AppData\\Roaming\\nltk_data...\n",
      "[nltk_data]   Package punkt is already up-to-date!\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import os\n",
    "import nltk\n",
    "import ssl\n",
    "import streamlit as st\n",
    "import random\n",
    "from sklearn.feature_extraction.text import TfidfVectorizer\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "\n",
    "ssl._create_default_https_context = ssl._create_unverified_context\n",
    "nltk.data.path.append(os.path.abspath(\"nltk_data\"))\n",
    "nltk.download('punkt')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "aLcXyzkKnv7v"
   },
   "outputs": [],
   "source": [
    "intents = [\n",
    "    {\n",
    "        \"tag\": \"greeting\",\n",
    "        \"patterns\": [\"Hi\", \"Hello\", \"Hey\", \"How are you\", \"What's up\"],\n",
    "        \"responses\": [\"Hi there\", \"Hello\", \"Hey\", \"I'm fine, thank you\", \"Nothing much\"]\n",
    "    },\n",
    "    {\n",
    "        \"tag\": \"goodbye\",\n",
    "        \"patterns\": [\"Bye\", \"See you later\", \"Goodbye\", \"Take care\"],\n",
    "        \"responses\": [\"Goodbye\", \"See you later\", \"Take care\"]\n",
    "    },\n",
    "    {\n",
    "        \"tag\": \"thanks\",\n",
    "        \"patterns\": [\"Thank you\", \"Thanks\", \"Thanks a lot\", \"I appreciate it\"],\n",
    "        \"responses\": [\"You're welcome\", \"No problem\", \"Glad I could help\"]\n",
    "    },\n",
    "    {\n",
    "        \"tag\": \"about\",\n",
    "        \"patterns\": [\"What can you do\", \"Who are you\", \"What are you\", \"What is your purpose\"],\n",
    "        \"responses\": [\"I am a chatbot\", \"My purpose is to assist you\", \"I can answer questions and provide assistance\"]\n",
    "    },\n",
    "    {\n",
    "        \"tag\": \"help\",\n",
    "        \"patterns\": [\"Help\", \"I need help\", \"Can you help me\", \"What should I do\"],\n",
    "        \"responses\": [\"Sure, what do you need help with?\", \"I'm here to help. What's the problem?\", \"How can I assist you?\"]\n",
    "    },\n",
    "    {\n",
    "    \"tag\": \"name\",\n",
    "    \"patterns\": [\n",
    "      \"What's your name\",\n",
    "      \"Do you have a name\",\n",
    "      \"What should I call you\"\n",
    "    ],\n",
    "    \"responses\": [\"You can call me Ada.\", \"My name is Ada.\"]\n",
    "  },\n",
    "  {\n",
    "    \"tag\": \"favorite_color\",\n",
    "    \"patterns\": [\"What's your favorite color\", \"Do you like any color\"],\n",
    "    \"responses\": [\n",
    "      \"I'm a chatbot, so I don't have a favorite color.\",\n",
    "      \"As an AI, I don't have preferences like humans do.\"\n",
    "    ]\n",
    "  },\n",
    "  {\n",
    "    \"tag\": \"hobby\",\n",
    "    \"patterns\": [\"What do you do for fun\", \"Do you have any hobbies\"],\n",
    "    \"responses\": [\n",
    "      \"I don't have hobbies as I'm here to assist you.\",\n",
    "      \"I'm always ready to chat with you, so that's my favorite thing to do!\"\n",
    "    ]\n",
    "  },\n",
    "  {\n",
    "    \"tag\": \"time\",\n",
    "    \"patterns\": [\"What's the time\", \"Can you tell me the time\"],\n",
    "    \"responses\": [\n",
    "      \"I'm sorry, but I don't have access to real-time information like the current time.\",\n",
    "      \"You can check the time on your device or use a clock.\"\n",
    "    ]\n",
    "  },\n",
    "  {\n",
    "    \"tag\": \"joke\",\n",
    "    \"patterns\": [\"Tell me a joke\", \"Do you know any jokes\", \"Make me laugh\"],\n",
    "    \"responses\": [\n",
    "      \"Why don’t scientists trust atoms? Because they make up everything!\",\n",
    "      \"Why don't skeletons fight each other? They don't have the guts!\",\n",
    "      \"Did you hear about the mathematician who’s afraid of negative numbers? He’ll stop at nothing to avoid them!\"\n",
    "    ]\n",
    "  },\n",
    "  {\n",
    "    \"tag\": \"food\",\n",
    "    \"patterns\": [\n",
    "      \"What's your favorite food\",\n",
    "      \"Do you like to eat\",\n",
    "      \"Tell me about food\"\n",
    "    ],\n",
    "    \"responses\": [\n",
    "      \"As a chatbot, I don't eat, but I'm here to help with any questions you have about food!\",\n",
    "      \"I may not have taste buds, but I can assist you in finding recipes or restaurants!\"\n",
    "    ]\n",
    "  },\n",
    "  {\n",
    "    \"tag\": \"movies\",\n",
    "    \"patterns\": [\n",
    "      \"What's your favorite movie\",\n",
    "      \"Recommend me a movie\",\n",
    "      \"Tell me about movies\"\n",
    "    ],\n",
    "    \"responses\": [\n",
    "      \"As an AI, I don't watch movies, but I can suggest some popular ones like The Shawshank Redemption, Inception, or The Godfather.\",\n",
    "      \"I may not have personal preferences, but I can help you find movies based on your taste!\"\n",
    "    ]\n",
    "  },\n",
    "  {\n",
    "    \"tag\": \"technology\",\n",
    "    \"patterns\": [\n",
    "      \"What's the latest tech news\",\n",
    "      \"Tell me about technology\",\n",
    "      \"What's new in tech\"\n",
    "    ],\n",
    "    \"responses\": [\n",
    "      \"As an AI language model, I don't have real-time data, but you can check technology news websites for the latest updates.\",\n",
    "      \"Technology is constantly evolving. Stay updated with tech blogs and news sites to know about the latest advancements!\"\n",
    "    ]\n",
    "  },\n",
    "  {\n",
    "    \"tag\": \"compliment\",\n",
    "    \"patterns\": [\"You're awesome\", \"You're great\", \"I like you\"],\n",
    "    \"responses\": [\n",
    "      \"Thank you! I'm just a program, but I'm here to assist and make your experience better.\",\n",
    "      \"I'm glad you think so! My purpose is to help and provide useful information.\"\n",
    "    ]\n",
    "  },\n",
    "  {\n",
    "    \"tag\": \"restaurant_search\",\n",
    "    \"patterns\": [\n",
    "      \"Find me a restaurant\",\n",
    "      \"I'm looking for a restaurant\",\n",
    "      \"Where can I find good food?\",\n",
    "      \"Suggest a restaurant\",\n",
    "      \"I want to eat out\",\n",
    "      \"I'm hungry\",\n",
    "      \"I'm craving something\",\n",
    "      \"What are some good restaurants here?\",\n",
    "      \"I need a restaurant recommendation\",\n",
    "      \"Help me find a place to eat\",\n",
    "      \"I'm looking for a specific type of restaurant\",\n",
    "      \"I want to try some Andhra cuisine\",\n",
    "      \"Where can I find authentic Andhra food?\",\n",
    "      \"I'm looking for a restaurant with a specific ambiance\",\n",
    "      \"I need a restaurant for a special occasion\",\n",
    "      \"I'm looking for a restaurant in a specific area\",\n",
    "      \"I want to find a restaurant with a specific price range\",\n",
    "      \"I'm looking for a restaurant with outdoor seating\",\n",
    "      \"I'm looking for a restaurant with live music\",\n",
    "      \"I'm looking for a restaurant with a specific cuisine\"\n",
    "    ],\n",
    "    \"responses\": [\n",
    "      \"Sure, let me help you find the perfect restaurant. What kind of food are you looking for?\",\n",
    "      \"I can help you with that! What type of cuisine are you interested in?\",\n",
    "      \"No problem! What's your budget and preferred location?\",\n",
    "      \"I'm on it! Do you have any specific preferences, like ambiance or cuisine?\",\n",
    "      \"Absolutely! Tell me more about what you're looking for.\",\n",
    "      \"I can definitely assist you. What kind of dining experience are you hoping for?\",\n",
    "      \"Let's find the perfect spot for you. What kind of food are you craving?\",\n",
    "      \"I'm happy to help! Do you have any specific requirements, like dietary restrictions?\",\n",
    "      \"No problem! What's your budget and preferred location?\",\n",
    "      \"I can help you with that! What type of cuisine are you interested in?\",\n",
    "      \"Sure, let me help you find the perfect restaurant. What kind of food are you looking for?\",\n",
    "      \"I can help you with that! What type of cuisine are you interested in?\",\n",
    "      \"No problem! What's your budget and preferred location?\",\n",
    "      \"I'm on it! Do you have any specific preferences, like ambiance or cuisine?\",\n",
    "      \"Absolutely! Tell me more about what you're looking for.\",\n",
    "      \"I can definitely assist you. What kind of dining experience are you hoping for?\",\n",
    "      \"Let's find the perfect spot for you. What kind of food are you craving?\",\n",
    "      \"I'm happy to help! Do you have any specific requirements, like dietary restrictions?\",\n",
    "      \"No problem! What's your budget and preferred location?\",\n",
    "      \"I can help you with that! What type of cuisine are you interested in?\",\n",
    "      \"Sure, let me help you find the perfect restaurant. What kind of food are you looking for?\"\n",
    "    ]\n",
    "  },\n",
    "  {\n",
    "    \"tag\": \"restaurant_information\",\n",
    "    \"patterns\": [\n",
    "      \"Tell me about this restaurant\",\n",
    "      \"What's the address of this restaurant?\",\n",
    "      \"What are their phone number?\",\n",
    "      \"What are their opening hours?\",\n",
    "      \"Do they have a website?\",\n",
    "      \"What's the menu like?\",\n",
    "      \"Do they have any special offers?\",\n",
    "      \"Do they have outdoor seating?\",\n",
    "      \"Do they have parking?\",\n",
    "      \"Is it wheelchair accessible?\",\n",
    "      \"Do they have a kids' menu?\",\n",
    "      \"Do they accept reservations?\",\n",
    "      \"What's the dress code?\",\n",
    "      \"What's the atmosphere like?\",\n",
    "      \"What kind of music do they play?\",\n",
    "      \"Do they have live music?\",\n",
    "      \"What's the average price range?\",\n",
    "      \"Do they have any reviews?\",\n",
    "      \"What are people saying about this restaurant?\",\n",
    "      \"Can you give me more information about this restaurant?\",\n",
    "      \"What are some popular restaurants in Andhra Pradesh?\",\n",
    "      \"Can you name a few famous restaurants in [City/Region]?\",\n",
    "      \"Which restaurants are known for [Cuisine/Dish]?\",\n",
    "      \"I'm looking for restaurants with [Specific feature, e.g., 'seafood', 'views', 'authentic Andhra cuisine']\",\n",
    "      \"What are some highly-rated restaurants in Andhra Pradesh?\",\n",
    "      \"Give me some examples of well-regarded restaurants.\",\n",
    "      \"I need names of some good restaurants.\",\n",
    "      \"Can you suggest some restaurants with unique specialties?\",\n",
    "      \"I'm interested in restaurants with [Ambiance, e.g., 'traditional', 'modern', 'romantic']\",\n",
    "      \"What are some must-try restaurants in Andhra Pradesh?\",\n",
    "      \"Which restaurants are popular among locals?\",\n",
    "      \"I'm looking for restaurants with [Price range, e.g., 'budget-friendly', 'fine dining']\",\n",
    "      \"Can you recommend some restaurants with [Specific requirement, e.g., 'outdoor seating', 'live music']\",\n",
    "      \"What are some famous restaurants in [City/Region] known for [Cuisine/Dish]?\",\n",
    "      \"I'm looking for a restaurant in [City/Region] that specializes in [Cuisine/Dish]\",\n",
    "      \"Can you suggest some restaurants with [Specific feature, e.g., 'seafood', 'views', 'authentic Andhra cuisine'] in [City/Region]?\",\n",
    "      \"What are some highly-rated restaurants in [City/Region]?\",\n",
    "      \"Give me some examples of well-regarded restaurants in [City/Region].\",\n",
    "      \"I need names of some good restaurants in [City/Region].\",\n",
    "      \"Can you suggest some restaurants with unique specialties in [City/Region]?\"\n",
    "    ],\n",
    "    \"responses\": [\n",
    "      \"Here are a few well-regarded restaurants in Andhra Pradesh:Sri Venkateswara Annapoorna Restaurant (Guntur)Famous for its Andhra-style meals, especially the Gongura Pachadi and Pulusu.\",\n",
    "      \"Boardwalk Restaurant (Visakhapatnam): Offers stunning views of the Bay of Bengal and serves a variety of seafood dishes.\",\n",
    "      \"Rayalaseema Ruchulu (Hyderabad): Focuses on the spicy and flavorful cuisine of the Rayalaseema region, with dishes like Chicken Pulusu and Mirapakaya Bajji.\"\n",
    "    ]\n",
    "  }\n",
    "]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 80
    },
    "id": "JVlgv9Kin8MJ",
    "outputId": "3fd0e6c6-f525-4be4-dadc-d2ce4f216ded"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-1 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-1 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-1 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"▸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"▾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-1 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-1 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-1 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-1 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-1 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-1 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression(max_iter=10000, random_state=0)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;LogisticRegression<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.linear_model.LogisticRegression.html\">?<span>Documentation for LogisticRegression</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>LogisticRegression(max_iter=10000, random_state=0)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "LogisticRegression(max_iter=10000, random_state=0)"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create the vectorizer and classifier\n",
    "vectorizer = TfidfVectorizer()\n",
    "clf = LogisticRegression(random_state=0, max_iter=10000)\n",
    "\n",
    "# Preprocess the data\n",
    "tags = []\n",
    "patterns = []\n",
    "for intent in intents:\n",
    "    for pattern in intent['patterns']:\n",
    "        tags.append(intent['tag'])\n",
    "        patterns.append(pattern)\n",
    "\n",
    "# training the model\n",
    "x = vectorizer.fit_transform(patterns)\n",
    "y = tags\n",
    "clf.fit(x, y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "id": "eXG2SL4VoJDQ"
   },
   "outputs": [],
   "source": [
    "def chatbot(input_text):\n",
    "    input_text = vectorizer.transform([input_text])\n",
    "    tag = clf.predict(input_text)[0]\n",
    "    for intent in intents:\n",
    "        if intent['tag'] == tag:\n",
    "            response = random.choice(intent['responses'])\n",
    "            return response"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<Compressed Sparse Row sparse matrix of dtype 'float64'\n",
      "\twith 529 stored elements and shape (105, 160)>\n",
      "  Coords\tValues\n",
      "  (0, 50)\t1.0\n",
      "  (1, 46)\t1.0\n",
      "  (2, 49)\t1.0\n",
      "  (3, 54)\t0.7916925510002413\n",
      "  (3, 9)\t0.4707488840897064\n",
      "  (3, 158)\t0.3893820653535887\n",
      "  (4, 152)\t0.41426093183907303\n",
      "  (4, 147)\t0.9101581622728123\n",
      "  (5, 16)\t1.0\n",
      "  (6, 158)\t0.32848164774599237\n",
      "  (6, 121)\t0.6678696755707949\n",
      "  (6, 67)\t0.6678696755707949\n",
      "  (7, 43)\t1.0\n",
      "  (8, 130)\t0.7071067811865476\n",
      "  (8, 19)\t0.7071067811865476\n",
      "  (9, 158)\t0.4413425392686977\n",
      "  (9, 134)\t0.89733871143056\n",
      "  (10, 135)\t1.0\n",
      "  (11, 135)\t0.6764269450846155\n",
      "  (11, 74)\t0.7365097337873373\n",
      "  (12, 8)\t0.7365097337873373\n",
      "  (12, 60)\t0.6764269450846155\n",
      "  (13, 158)\t0.4548341682255063\n",
      "  (13, 152)\t0.42091151436038143\n",
      "  (13, 18)\t0.591396090533217\n",
      "  :\t:\n",
      "  (102, 20)\t0.2826709484545096\n",
      "  (102, 111)\t0.2826709484545096\n",
      "  (102, 30)\t0.37226314654802306\n",
      "  (102, 151)\t0.37226314654802306\n",
      "  (102, 110)\t0.37226314654802306\n",
      "  (103, 86)\t0.3640770792721178\n",
      "  (103, 56)\t0.27791280801352997\n",
      "  (103, 42)\t0.38122186043098677\n",
      "  (103, 123)\t0.27184386673923416\n",
      "  (103, 115)\t0.24627232092935444\n",
      "  (103, 91)\t0.33702462172268094\n",
      "  (103, 20)\t0.32594878183810777\n",
      "  (103, 111)\t0.32594878183810777\n",
      "  (103, 85)\t0.4292578342555646\n",
      "  (104, 158)\t0.21295821286952835\n",
      "  (104, 18)\t0.2768979626779874\n",
      "  (104, 56)\t0.2574588045677812\n",
      "  (104, 129)\t0.35316445169698363\n",
      "  (104, 123)\t0.2518365290899407\n",
      "  (104, 115)\t0.22814701415818786\n",
      "  (104, 157)\t0.269925039459409\n",
      "  (104, 20)\t0.3019593962660341\n",
      "  (104, 111)\t0.3019593962660341\n",
      "  (104, 146)\t0.39766504339523645\n",
      "  (104, 127)\t0.39766504339523645\n"
     ]
    }
   ],
   "source": [
    "from scipy.sparse import csr_matrix\n",
    "sparse_matrix = csr_matrix(x)\n",
    "print(sparse_matrix)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Absolutely! Tell me more about what you're looking for.\n"
     ]
    }
   ],
   "source": [
    "chat_1 = chatbot(\"Suggest me Places to have good food\")\n",
    "print(chat_1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "RS_aodoKoQkg",
    "outputId": "aba4d60d-f723-49ea-a388-0d91d7f8ca35"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2024-12-10 21:10:29.565 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-12-10 21:10:29.566 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-12-10 21:10:29.566 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-12-10 21:10:29.567 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-12-10 21:10:29.567 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-12-10 21:10:29.567 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-12-10 21:10:29.568 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-12-10 21:10:29.568 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-12-10 21:10:29.568 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-12-10 21:10:29.569 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-12-10 21:10:29.570 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-12-10 21:10:29.570 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n"
     ]
    }
   ],
   "source": [
    "counter = 0\n",
    "\n",
    "def main():\n",
    "    global counter\n",
    "    st.title(\"Chatbot\")\n",
    "    st.write(\"Welcome to the chatbot. Please type a message and press Enter to start the conversation.\")\n",
    "\n",
    "    counter += 1\n",
    "    user_input = st.text_input(\"You:\", key=f\"user_input_{counter}\")\n",
    "\n",
    "    if user_input:\n",
    "        response = chatbot(user_input)\n",
    "        st.text_area(\"Chatbot:\", value=response, height=100, max_chars=None, key=f\"chatbot_response_{counter}\")\n",
    "\n",
    "        if response.lower() in ['goodbye', 'bye']:\n",
    "            st.write(\"Thank you for chatting with me. Have a great day!\")\n",
    "            st.stop()\n",
    "\n",
    "if __name__ == '__main__':\n",
    "    main()"
   ]
  }
 ],
 "metadata": {
  "colab": {
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
